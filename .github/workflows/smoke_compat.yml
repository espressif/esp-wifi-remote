name: "Compat checks"

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  schedule:
    - cron: '0 0 * * *' # Once per day at midnight

jobs:
  wifi_remote_api_compat:
    name: Check API compatibility of WiFi Remote
    strategy:
      matrix:
        idf_ver: ["release-v5.5", "release-v5.4", "release-v5.3", "v5.4", "v5.4.1", "v5.4.2", "v5.3.3", "v5.3.2", "v5.3.1", "v5.5", "v5.3"] # add "latest" after esp_wifi breaking changes are fixed
    runs-on: ubuntu-latest
    container: espressif/idf:${{ matrix.idf_ver }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check that headers are the same as generated
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          pip install idf-component-manager idf-build-apps --upgrade
          cp -r ./components/esp_wifi_remote ./components/esp_wifi_remote_base
          cd ./components/esp_wifi_remote/scripts
          python generate_and_check.py --base-dir ../../esp_wifi_remote_base

  build_idf_examples_with_wifi_remote:
    name: Build IDF examples with WiFi Remote
    strategy:
      matrix:
        idf_ver: ["latest", "release-v5.5", "release-v5.4", "release-v5.3", "v5.4.1", "v5.3.3", "v5.3.1", "v5.3.2", "v5.4", "v5.4.2", "v5.5"] # add "v5.3" after esp-hosted support
        idf_target: ["esp32p4", "esp32h2", "esp32s3"]
        test: [ { app: idf_mqtt_example, path: "examples/protocols/mqtt/tcp" }, { app: wifi_enterprise, path: "examples/wifi/wifi_enterprise" }]
    runs-on: ubuntu-latest
    container: espressif/idf:${{ matrix.idf_ver }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
            key: ${{ matrix.idf_ver }}
      - name: Build ${{ matrix.test.app }} with IDF-${{ matrix.idf_ver }} for ${{ matrix.idf_target }}
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          pip install idf-component-manager idf-build-apps --upgrade
          export OVERRIDE_PATH=`pwd`/components/esp_wifi_remote
          echo ${OVERRIDE_PATH}
          if [ "${{matrix.test.app}}" = "wifi_enterprise" ]; then
            cd ${IDF_PATH}/${{matrix.test.path}}
            echo -e "dependencies:\n  espressif/esp_wifi_remote:\n    version: \"*\"\n    rules:\n      - if: \"target in [esp32p4, esp32h2]\"" > main/idf_component.yml
            echo -e "CONFIG_ESP_WIFI_REMOTE_EAP_ENABLED=y" > sdkconfig.defaults
            cd -
          fi
          sed -i '/espressif\/esp_wifi_remote:/a \ \ \ \ override_path: "${OVERRIDE_PATH}"' ${IDF_PATH}/${{matrix.test.path}}/main/idf_component.yml
          cat ${IDF_PATH}/${{matrix.test.path}}/main/idf_component.yml
          export PEDANTIC_FLAGS="-DIDF_CI_BUILD -Werror -Werror=deprecated-declarations -Werror=unused-variable -Werror=unused-but-set-variable -Werror=unused-function"
          export EXTRA_CFLAGS="${PEDANTIC_FLAGS} -Wstrict-prototypes"
          export EXTRA_CXXFLAGS="${PEDANTIC_FLAGS}"
          cd ${IDF_PATH}/${{matrix.test.path}}
          idf-build-apps find --config sdkconfig.ci* -vv --target ${{ matrix.idf_target }}
          idf-build-apps build --config sdkconfig.ci* -vv --target ${{ matrix.idf_target }}
